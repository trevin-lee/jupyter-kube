name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4
      
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: package-lock.json
        
    - name: Sync versions from version.json
      run: node scripts/sync-versions.js
        
    - name: Install dependencies
      run: npm ci
        
    - name: Install Linux-specific dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd app
        npm install @rollup/rollup-linux-x64-gnu --save-optional
        
    - name: Build Electron app (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        cd app
        npm run build:mac
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build Electron app (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd app
        npm run build:win
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build Electron app (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd app
        npm run build:linux
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-build
        path: |
          app/release/*.dmg
          app/release/*.zip
          app/release/*.exe
          app/release/*.AppImage
          app/release/*.deb
          app/release/*.blockmap
        if-no-files-found: error
        
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          *-build/*.dmg
          *-build/*.zip
          *-build/*.exe
          *-build/*.AppImage
          *-build/*.deb
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Matrix build configuration
# macos-latest: builds both Intel and ARM64
# windows-latest: builds Windows installer and portable
# ubuntu-latest: builds AppImage and .deb 